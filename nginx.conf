events {}

http {
    # HTTP server to redirect to HTTPS
    server {
        listen 80;
        server_name skypedal.moolman.dev;  # Replace with your domain

        # Redirect all HTTP requests to HTTPS
        return 301 https://$host$request_uri;
    }

    # HTTPS server
    server {
        listen 443 ssl;
        server_name skypedal.moolman.dev;  # Replace with your domain

        # SSL configuration
        ssl_certificate /etc/letsencrypt/live/skypedal.moolman.dev/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/skypedal.moolman.dev/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:RSA+AES:!MD5:!SHA1';
        ssl_prefer_server_ciphers on;
        # ssl_dhparam /etc/nginx/ssl/dhparam.pem;  # Optional, for perfect forward secrecy

        # Route frontend requests
        location / {
            proxy_pass http://frontend:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route backend API requests
        location /api/ {
            proxy_pass http://backend:9000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

    }
}
